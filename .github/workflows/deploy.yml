name: facts

on:
  workflow_dispatch:
    inputs:
      service-name:
        description: 'Facts service'
        required: true

jobs:
  deploy_on_eks:
    runs-on: ubuntu-latest
    # env:
    #   AWS_REGION: eu-central-1
    #   CLUSTER_NAME: MoonActive
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    # - name: Install kubectl
    #   uses: azure/setup-kubectl@v2.0
    #   with:
    #     version: 'v1.24.0'
    #   id: install

    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ${{ env.AWS_REGION }}

    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: facts
        IMAGE_TAG: ${{ github.run_number }}
      run: |
        docker buildx build --file web-app/Dockerfile --tag $REGISTRY/$REPOSITORY:$IMAGE_TAG web-app
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    # - name: Update kube config
    #   run: |
    #     aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }}  --kubeconfig ./kubeconfig
    #     echo 'KUBE_CONFIG_DATA<<EOF' >> $GITHUB_ENV
    #     echo $(cat ./kubeconfig | base64) >> $GITHUB_ENV
    #     echo 'EOF' >> $GITHUB_ENV

    - name: Run helm upgrade
      uses: koslib/helm-eks-action@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        command: helm upgrade --install --wait --atomic --namespace=facts ${{ github.event.inputs.service-name }} --values web-app/facts/${{ github.event.inputs.service-name }}.yaml web-app/facts/ --set defaultImageTag=${{ github.run_number }}  
     
