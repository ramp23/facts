name: facts

on:
  workflow_dispatch:
    inputs:
      service-name:
        description: 'Facts service'
        required: true

jobs:
  deploy_on_eks:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: eu-central-1
      CLUSTER_NAME: MoonActive
      PROFILE_NAME: eks-cluster
      AWS_ACCOUNT_ID: 849234523634
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # - name: Configure AWS Credentials
    #   run: |
    #     aws configure set region ${{ env.AWS_REGION }} --profile ${{ env.PROFILE_NAME }}
    #     aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID  }} --profile ${{ env.PROFILE_NAME }}
    #     aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile ${{ env.PROFILE_NAME }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # - name: Login to Amazon ECR
    #   run: |
    #     aws ecr get-login-password --region ${{ env.AWS_REGION }} --profile ${{ env.PROFILE_NAME }} | sudo docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: facts
        IMAGE_TAG: ${{ github.run_number }}
      run: |
        docker buildx build --file web-app/Dockerfile --tag $REGISTRY/$REPOSITORY:$IMAGE_TAG web-app
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Update kube config
      run: |
        aws configure set region ${{ env.AWS_REGION }} --profile ${{ env.PROFILE_NAME }}
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID  }} --profile ${{ env.PROFILE_NAME }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile ${{ env.PROFILE_NAME }}
        aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }} --kubeconfig /home/runner/.kube/config --profile ${{ env.PROFILE_NAME }}
        echo 'KUBE_CONFIG_DATA<<EOF' >> $GITHUB_ENV
        echo $(cat /home/runner/.kube/config | base64) >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
        cat ${{ env.KUBE_CONFIG_DATA }}
        
    - name: Run helm upgrade
      uses: WyriHaximus/github-action-helm3@v3
      with:
       exec: helm upgrade --install --wait --atomic --namespace=facts ${{ github.event.inputs.service-name }} --values web-app/facts/${{ github.event.inputs.service-name }}.yaml web-app/facts/ --set defaultImageTag=${{ github.run_number }} 
       kubeconfig: '${{ env.KUBE_CONFIG_DATA }}'
       overrule_existing_kubeconfig: "true"
     
