{{- $general := $.Values.deploymentsGeneral -}}
{{- range $name, $d := .Values.deployments }}
{{- if not (.disabled | default false) }}
---
apiVersion: {{ include "helpers.capabilities.deployment.apiVersion" $ }}
kind: Deployment
metadata:
  {{range $projectStructure := $.Values.projectVersions}}
  {{if eq $projectStructure.version $.Values.version}}
  {{$serviceVersion := get (get $projectStructure $name) "serviceVersion"}}
  name: {{ include "helpers.app.fullname" (dict "name" (ternary (printf "%s-%s" $name $serviceVersion) $name (not (empty $.Values.version))) "context" $) }}
  {{end}}
  {{ else }}
  name: {{ include "helpers.app.fullname" (dict "name" $name "context" $) }}
  {{end}}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "helpers.app.labels" $ | nindent 4 }}
    {{- with $general.labels }}{{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 4 }}{{- end }}
    {{- with .labels }}{{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 4 }}{{- end }}
  annotations:
    {{- include "helpers.app.genericAnnotations" $ | indent 4 }}
    {{- with .annotations }}{{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 4 }}{{- end }}
spec:
  replicas: {{ .replicas | default 1 }}
  {{- with .strategy }}
  strategy: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helpers.app.selectorLabels" $ | nindent 6 }}
      {{- with .extraSelectorLabels }}{{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 6 }}{{- end }}
  template:
    metadata:
      labels:
        {{- include "helpers.app.selectorLabels" $ | nindent 8 }}
        {{- with .extraSelectorLabels }}{{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}{{- end }}
        {{- with $.Values.generic.podLabels }}{{- include "helpers.tplvalues.render" ( dict "value" . "context" $ ) | nindent 8 }}{{- end }}
        {{- with .podLabels }}{{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}{{- end }}
      annotations:
        {{- with $.Values.generic.podAnnotations }}{{- include "helpers.tplvalues.render" ( dict "value" . "context" $ ) | nindent 8 }}{{- end }}
        {{- with .podAnnotations }}{{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}{{- end }}
    spec:
      {{- if .serviceAccountName }}
      serviceAccountName: {{ .serviceAccountName }}
      {{- else if $.Values.generic.serviceAccountName }}
      serviceAccountName: {{ $.Values.generic.serviceAccountName }}
      {{- end }}
      {{- if .hostAliases }}
      hostAliases: {{- include "helpers.tplvalues.render" (dict "value" .hostAliases "context" $) | nindent 8 }}
      {{- else if $.Values.generic.hostAliases }}
      hostAliases: {{- include "helpers.tplvalues.render" (dict "value" $.Values.generic.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .affinity }}
      affinity: {{- include "helpers.tplvalues.render" ( dict "value" .affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        nodeAffinity: {{- include "helpers.affinities.nodes" (dict "type" $.Values.nodeAffinityPreset.type "key" $.Values.nodeAffinityPreset.key "values" $.Values.nodeAffinityPreset.values) | nindent 10 }}
        podAffinity: {{- include "helpers.affinities.pods" (dict "type" $.Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "helpers.affinities.pods" (dict "type" $.Values.podAntiAffinityPreset "context" $) | nindent 10 }}
      {{- end }}
      {{- if .dnsPolicy }}
      dnsPolicy: {{ .dnsPolicy }}
      {{- else if $.Values.generic.dnsPolicy }}
      dnsPolicy: {{ $.Values.generic.dnsPolicy }}
      {{- end }}
      {{- with .nodeSelector }}
      nodeSelector: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .securityContext }}
      securityContext: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{ if or $.Values.imagePullSecrets $.Values.generic.extraImagePullSecrets .extraImagePullSecrets .imagePullSecrets }}
      imagePullSecrets:
      {{- range $sName, $v := $.Values.imagePullSecrets }}
      - name: {{ $sName }}
      {{- end }}
      {{- with .imagePullSecrets }}{{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 6 }}{{- end }}
      {{- with .extraImagePullSecrets }}{{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 6 }}{{- end }}
      {{- with $.Values.generic.extraImagePullSecrets }}{{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 6 }}{{- end }}
      {{- end }}
      {{- if .terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .terminationGracePeriodSeconds }}
      {{- end }}
      {{- with .initContainers}}
      initContainers:
      {{- range . }}
      - name: {{ .name | default (printf "%s-init-%s" $name (lower (randAlphaNum 5))) }}
        {{- $image := $.Values.defaultImage }}{{ with .image }}{{ $image = include "helpers.tplvalues.render" ( dict "value" . "context" $) }}{{ end }}
        {{- $imageTag := $.Values.defaultImageTag }}{{ with .imageTag }}{{ $imageTag = include "helpers.tplvalues.render" ( dict "value" . "context" $) }}{{ end }}
        image: {{ $image }}:{{ $imageTag }}
        imagePullPolicy: {{ .imagePullPolicy | default $.Values.defaultImagePullPolicy }}
        {{- with .securityContext }}
        securityContext: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- if $.Values.diagnosticMode.enabled }}
        args: {{- include "helpers.tplvalues.render" ( dict "value" $.Values.diagnosticMode.args "context" $) | nindent 8 }}
        {{- else if .args }}
        args: {{- include "helpers.tplvalues.render" ( dict "value" .args "context" $) | nindent 8 }}
        {{- end }}
        {{- if $.Values.diagnosticMode.enabled }}
        command: {{- include "helpers.tplvalues.render" ( dict "value" $.Values.diagnosticMode.command "context" $) | nindent 8 }}
        {{- else if .command }}
        {{- if typeIs "string" .command }}
        command: {{ printf "[\"%s\"]" (join ("\", \"") (without (splitList " " .command) "" )) }}
        {{- else }}
        command: {{- include "helpers.tplvalues.render" ( dict "value" .command "context" $) | nindent 8 }}
        {{- end }}
        {{- end }}
        {{- include "helpers.workloads.envs" (dict "value" . "context" $) | indent 8 }}
        {{- include "helpers.workloads.envsFrom" (dict "value" . "context" $) | indent 8 }}
        {{- with .ports }}
        ports: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
        {{- end }}
        {{- with .lifecycle }}
        lifecycle: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .livenessProbe }}
        livenessProbe: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .readinessProbe }}
        readinessProbe: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .resources }}
        resources: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        volumeMounts: {{- include "helpers.volumes.renderVolumeMounts" (dict "value" . "general" $general "context" $) | nindent 8 }}
      {{- end }}{{- end }}
      containers:
      {{- range .containers }}
      - name: {{ .name | default (printf "%s-%s" $name (lower (randAlphaNum 5))) }}
        {{- $image := $.Values.defaultImage }}{{ with .image }}{{ $image = include "helpers.tplvalues.render" ( dict "value" . "context" $) }}{{ end }}
        {{- $imageTag := $.Values.defaultImageTag }}{{ with .imageTag }}{{ $imageTag = include "helpers.tplvalues.render" ( dict "value" . "context" $) }}{{ end }}
        image: {{ $image }}:{{ $imageTag }}
        imagePullPolicy: {{ .imagePullPolicy | default $.Values.defaultImagePullPolicy }}
        {{- with .securityContext }}
        securityContext: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- if $.Values.diagnosticMode.enabled }}
        args: {{- include "helpers.tplvalues.render" ( dict "value" $.Values.diagnosticMode.args "context" $) | nindent 8 }}
        {{- else if .args }}
        args: {{- include "helpers.tplvalues.render" ( dict "value" .args "context" $) | nindent 8 }}
        {{- end }}
        {{- if $.Values.diagnosticMode.enabled }}
        command: {{- include "helpers.tplvalues.render" ( dict "value" $.Values.diagnosticMode.command "context" $) | nindent 8 }}
        {{- else if .command }}
        {{- if typeIs "string" .command }}
        command: {{ printf "[\"%s\"]" (join ("\", \"") (without (splitList " " .command) "" )) }}
        {{- else }}
        command: {{- include "helpers.tplvalues.render" ( dict "value" .command "context" $) | nindent 8 }}
        {{- end }}
        {{- end }}
        {{- include "helpers.workloads.envs" (dict "value" . "context" $) | indent 8 }}
        {{- include "helpers.workloads.envsFrom" (dict "value" . "context" $) | indent 8 }}
        {{- with .ports }}
        ports: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
        {{- end }}
        {{- with .lifecycle }}
        lifecycle: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .livenessProbe }}
        livenessProbe: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .readinessProbe }}
        readinessProbe: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .resources }}
        resources: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        volumeMounts: {{- include "helpers.volumes.renderVolumeMounts" (dict "value" . "general" $general "context" $) | nindent 8 }}
      {{- end }}
      volumes: {{- include "helpers.volumes.renderVolume" (dict "value" . "general" $general "context" $) | indent 6 -}}
{{- end }}
{{- end }}
